# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:

    def isPalindrome(self, head: ListNode) -> bool:
        def reverse(node):
            pre=None
            cur=node
            while cur:
                temp=cur.next
                cur.next=pre
                pre=cur
                cur=temp
            return pre
        sp=head
        fp=head       
        while fp and fp.next:
            fp=fp.next.next
            sp=sp.next
        shead=reverse(sp)
        while shead and head:
            if shead.val!=head.val:
                return False
            shead=shead.next
            head=head.next
        return True
        
            
        
        
